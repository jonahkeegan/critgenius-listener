name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

jobs:
  build-and-validate:
    runs-on: ubuntu-latest
    env:
      CI: true
      DEBUG_VITEST_PATHS: "true"
      DEBUG_VITEST_PATH_LEVEL: debug
      DEBUG_VITEST_PATH_STACKS: "true"
      DEBUG_VITEST_PATH_OUTPUT: ./artifacts/vitest-paths.log
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Build packages that expose typed entrypoints before lint/type-check
      - name: Build shared package
        run: pnpm --filter @critgenius/shared run build

      - name: Build test-utils package
        run: pnpm --filter @critgenius/test-utils run build

      - name: Tooling version consistency
        run: node scripts/validate-versions.mjs --ci-mode --base-ref "${{ github.base_ref || 'origin/main' }}"

      - name: Upload tooling version report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: tooling-version-validation
          path: artifacts/version-validation.json
          if-no-files-found: warn

      - name: Validate filenames
        run: pnpm run validate:filenames

      - name: Validate decision matrix headers
        run: pnpm run validate:doc-headers

      - name: Lint (fail on warnings)
        run: pnpm run lint:ci

      - name: Type check
        run: pnpm run type-check

      - name: Unit tests
        run: pnpm run test

      - name: Infrastructure tests
        run: pnpm run test:infrastructure

      - name: Coverage (thematic suite)
        id: coverage_thematic
        if: ${{ success() || failure() }}
        run: pnpm run test:coverage:thematic

      - name: Upload path diagnostics
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: vitest-path-diagnostics
          path: artifacts/vitest-paths.log
          if-no-files-found: ignore

      - name: Validate coverage orchestration (CI)
        if: ${{ always() && steps.coverage_thematic.outcome != 'cancelled' }}
        run: pnpm run validate:coverage-orchestration -- --ci

      - name: Upload coverage artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-bundle
          path: |
            coverage/**/*.html
            coverage/**/coverage-summary.json
            coverage/**/coverage-final.json
            coverage/thematic-summary.json
          if-no-files-found: warn

      - name: Upload coverage to Codecov
        if: ${{ success() }}
        uses: codecov/codecov-action@v5
        with:
          files: |
            coverage/**/coverage-final.json
          flags: listener
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Validate service manifest
        run: node scripts/service-manifest-loader.mjs --manifest ./services.yaml

      # Env drift guard: ensure docs and .env.example stay in sync with proxy registry
      - name: Generate proxy artifacts
        run: |
          node scripts/generate-proxy-env-example.mjs
          node scripts/generate-proxy-docs.mjs

      - name: Env drift check (proxy registry & templates)
        run: pnpm run validate:proxy
