name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

jobs:
  thematic-coverage:
    name: Generate thematic coverage
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared package
        run: pnpm --filter @critgenius/shared run build

      - name: Verify shared build artifacts
        run: |
          test -f packages/shared/dist/index.js || (echo "packages/shared/dist/index.js missing" >&2 && exit 1)
          test -f packages/shared/dist/types/index.js || (echo "packages/shared/dist/types/index.js missing" >&2 && exit 1)

      - name: Build test-utils package
        run: pnpm --filter @critgenius/test-utils run build

      - name: Run thematic coverage
        run: pnpm run test:coverage:thematic

      - name: Verify thematic summary output
        run: |
          test -f coverage/thematic-summary.json || (echo "coverage/thematic-summary.json missing" >&2 && exit 1)

      - name: Upload thematic coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: thematic-coverage
          path: coverage
          retention-days: 1

  validate-coverage:
    name: Validate coverage orchestration
    runs-on: ubuntu-latest
    needs: thematic-coverage
    timeout-minutes: 20
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download thematic coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: thematic-coverage
          path: coverage

      - name: Inspect downloaded summary
        run: |
          ls -la coverage
          cat coverage/thematic-summary.json

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared package
        run: pnpm --filter @critgenius/shared run build

      - name: Verify shared build artifacts
        run: |
          test -f packages/shared/dist/index.js || (echo "packages/shared/dist/index.js missing" >&2 && exit 1)
          test -f packages/shared/dist/types/index.js || (echo "packages/shared/dist/types/index.js missing" >&2 && exit 1)

      - name: Build test-utils package
        run: pnpm --filter @critgenius/test-utils run build

      - name: Validate coverage orchestration (CI)
        run: pnpm run validate:coverage-orchestration -- --ci

      - name: Run coverage integration tests
        run: pnpm run test:infrastructure:integration

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: reports/**/*.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-bundle
          path: |
            coverage/**/*.html
            coverage/**/coverage-summary.json
            coverage/**/coverage-final.json
            coverage/thematic-summary.json
          if-no-files-found: warn

      - name: Upload coverage to Codecov
        if: ${{ success() }}
        uses: codecov/codecov-action@v5
        with:
          files: |
            coverage/**/coverage-final.json
          flags: listener
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-validate:
    runs-on: ubuntu-latest
    env:
      CI: true
      DEBUG_VITEST_PATHS: "true"
      DEBUG_VITEST_PATH_LEVEL: debug
      DEBUG_VITEST_PATH_STACKS: "true"
      DEBUG_VITEST_PATH_OUTPUT: ./artifacts/vitest-paths.log
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Build packages that expose typed entrypoints before lint/type-check
      - name: Build shared package
        run: pnpm --filter @critgenius/shared run build

      - name: Verify shared build artifacts
        run: |
          test -f packages/shared/dist/index.js || (echo "packages/shared/dist/index.js missing" >&2 && exit 1)
          test -f packages/shared/dist/types/index.js || (echo "packages/shared/dist/types/index.js missing" >&2 && exit 1)

      - name: Build test-utils package
        run: pnpm --filter @critgenius/test-utils run build

      - name: Tooling version consistency
        run: node scripts/validate-versions.mjs --ci-mode --base-ref "${{ github.base_ref || 'origin/main' }}"

      - name: Upload tooling version report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: tooling-version-validation
          path: artifacts/version-validation.json
          if-no-files-found: warn

      - name: Validate filenames
        run: pnpm run validate:filenames

      - name: Validate decision matrix headers
        run: pnpm run validate:doc-headers

      - name: Lint (fail on warnings)
        run: pnpm run lint:ci

      - name: Type check
        run: pnpm run type-check

      - name: Unit tests
        run: pnpm run test

      - name: Infrastructure tests
        run: pnpm run test:infrastructure

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: reports/**/*.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload path diagnostics
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: vitest-path-diagnostics
          path: artifacts/vitest-paths.log
          if-no-files-found: ignore

      - name: Validate service manifest
        run: node scripts/service-manifest-loader.mjs --manifest ./services.yaml

      # Env drift guard: ensure docs and .env.example stay in sync with proxy registry
      - name: Generate proxy artifacts
        run: |
          node scripts/generate-proxy-env-example.mjs
          node scripts/generate-proxy-docs.mjs

      - name: Env drift check (proxy registry & templates)
        run: pnpm run validate:proxy

  e2e-tests:
    name: E2E Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest
    needs: build-and-validate
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        browser:
          - chromium-desktop
          - chromium-tablet
          - chromium-mobile
          - firefox-desktop
          - edge-desktop
          - webkit-desktop
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.20.4
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm --filter @critgenius/shared run build
          pnpm --filter @critgenius/test-utils run build
          pnpm --filter @critgenius/client run build

      - name: Verify shared build artifacts
        run: |
          test -f packages/shared/dist/index.js || (echo "packages/shared/dist/index.js missing" >&2 && exit 1)
          test -f packages/shared/dist/types/index.js || (echo "packages/shared/dist/types/index.js missing" >&2 && exit 1)

      - name: Install Playwright browsers
        run: |
          pnpm --filter @critgenius/client exec -- playwright install --with-deps chromium firefox webkit

      - name: Install Microsoft Edge browser
        if: matrix.browser == 'edge-desktop'
        run: pnpm --filter @critgenius/client exec -- playwright install --with-deps msedge

      - name: Start dev server
        env:
          VITE_E2E: "true"
        run: |
          pnpm --filter @critgenius/client run dev &
          sleep 10
          curl --retry 10 --retry-delay 2 --retry-connrefused http://localhost:5173

      - name: Run Playwright tests
        env:
          VITE_E2E: "true"
        run: pnpm --filter @critgenius/client exec -- playwright test --project=${{ matrix.browser }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}
          path: packages/client/test-results/
          retention-days: 7
          if-no-files-found: ignore

      - name: Upload playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: packages/client/playwright-report/
          retention-days: 7
          if-no-files-found: ignore

      - name: Upload videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos-${{ matrix.browser }}
          path: packages/client/test-results/**/*.webm
          retention-days: 7
          if-no-files-found: ignore

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots-${{ matrix.browser }}
          path: packages/client/test-results/**/*.png
          retention-days: 7
          if-no-files-found: ignore

      - name: Upload traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ matrix.browser }}
          path: packages/client/test-results/**/*.zip
          retention-days: 7
          if-no-files-found: ignore
