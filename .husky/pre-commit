#!/usr/bin/env sh

# Strict mode (portable subset)
set -e

echo "🚦 Pre-commit quality gate starting..."

echo "🔧 Running lint-staged (ESLint + Prettier on staged files)..."
if npx lint-staged; then
	echo "✅ Lint & format passed"
else
	echo "❌ Lint / format failed – blocking commit"
	exit 1
fi

echo "📁 Validating filenames for OneDrive/GitHub compatibility..."
if node scripts/filename-validator.mjs >/dev/null 2>&1; then
	echo "✅ Filename validation passed"
else
	echo "❌ Problematic filenames detected – these will break OneDrive/GitHub sync:"
	echo "   Run 'pnpm validate:filenames' to see details and fix issues"
	echo "   Commit aborted to prevent sync issues"
	exit 1
fi

# Detect staged TypeScript source changes (added / copied / modified)
if git diff --cached --name-only --diff-filter=ACM | grep -E '\\.(ts|tsx)$' >/dev/null 2>&1; then
	echo "🧪 TypeScript changes detected – running incremental type check..."
	# Capture start time; fallback to 0 if unsupported
	start_ts=$(date +%s 2>/dev/null || echo 0)
	if pnpm -w type-check >/dev/null 2>&1; then
		end_ts=$(date +%s 2>/dev/null || echo 0)
		duration=$(( end_ts - start_ts ))
		if [ "$duration" -ge 0 ] && [ "$duration" -le 3600 ]; then
			if [ "$duration" -gt 0 ]; then
				echo "✅ Type check passed (${duration}s)"
			else
				echo "✅ Type check passed (<1s)"
			fi
		else
			echo "✅ Type check passed (duration unavailable)"
		fi
	else
		echo "❌ Type check failed – review errors above. Commit aborted." >&2
		exit 1
	fi
else
	echo "⏩ No staged TypeScript changes – skipping type check"
fi

echo "🎉 All pre-commit checks passed"
